// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.14.0
// source: queries.sql

package db

import (
	"context"
	"database/sql"

	"github.com/google/uuid"
)

const addBooks = `-- name: AddBooks :exec
INSERT INTO books (id, name)  VALUES ($1, $2)
`

type AddBooksParams struct {
	ID   uuid.UUID      `json:"id"`
	Name sql.NullString `json:"name"`
}

func (q *Queries) AddBooks(ctx context.Context, arg AddBooksParams) error {
	_, err := q.exec(ctx, q.addBooksStmt, addBooks, arg.ID, arg.Name)
	return err
}

const listBooks = `-- name: ListBooks :many
SELECT id, name FROM books
`

func (q *Queries) ListBooks(ctx context.Context) ([]Book, error) {
	rows, err := q.query(ctx, q.listBooksStmt, listBooks)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Book
	for rows.Next() {
		var i Book
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
